// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WebChat.Database;

namespace WebChat.Migrations
{
    [DbContext(typeof(ChatDbContext))]
    [Migration("20190226221002_migr")]
    partial class migr
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("WebChat.Database.Model.Message", b =>
                {
                    b.Property<DateTime>("SendingTime")
                        .HasColumnName("sending_time");

                    b.Property<int>("UserId")
                        .HasColumnName("user_id");

                    b.Property<string>("MessageValue")
                        .HasColumnName("message_value");

                    b.Property<int>("RoomId")
                        .HasColumnName("room_id");

                    b.Property<int>("Type")
                        .HasColumnName("type");

                    b.HasKey("SendingTime", "UserId");

                    b.HasIndex("RoomId")
                        .HasName("ix_messages_room_id");

                    b.HasIndex("UserId")
                        .HasName("ix_messages_user_id");

                    b.ToTable("messages");
                });

            modelBuilder.Entity("WebChat.Database.Model.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("created_at");

                    b.Property<string>("Name")
                        .HasColumnName("name");

                    b.Property<int>("UserId")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_rooms");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("UserId")
                        .HasName("ix_rooms_user_id");

                    b.ToTable("rooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2017, 1, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Developers",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2016, 5, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Managers",
                            UserId = 3
                        });
                });

            modelBuilder.Entity("WebChat.Database.Model.RoomCredential", b =>
                {
                    b.Property<int>("RoomId")
                        .HasColumnName("room_id");

                    b.Property<string>("HashedPassword")
                        .HasColumnName("hashed_password");

                    b.Property<byte[]>("Salt")
                        .HasColumnName("salt");

                    b.HasKey("RoomId")
                        .HasName("pk_room_credentials");

                    b.ToTable("room_credentials");

                    b.HasData(
                        new
                        {
                            RoomId = 1,
                            HashedPassword = "cIoBrtd+h++b9YDUUI70U9lLtPqZVkgEBQGhEsCgApI=",
                            Salt = new byte[] { 92, 190, 212, 211, 31, 252, 31, 131, 119, 115, 202, 30, 248, 16, 33, 199 }
                        },
                        new
                        {
                            RoomId = 2,
                            HashedPassword = "R+B+7Wog3dF5v4HR5TEfw7ePF7aSbhYp5jVf3c2qWDM=",
                            Salt = new byte[] { 11, 204, 221, 177, 8, 199, 167, 39, 45, 144, 135, 165, 5, 156, 48, 214 }
                        });
                });

            modelBuilder.Entity("WebChat.Database.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<int?>("CurrentRoomId")
                        .HasColumnName("current_room_id");

                    b.Property<string>("Nickname")
                        .HasColumnName("nickname");

                    b.HasKey("Id")
                        .HasName("pk_users");

                    b.HasIndex("CurrentRoomId")
                        .HasName("ix_users_current_room_id");

                    b.HasIndex("Nickname")
                        .IsUnique();

                    b.ToTable("users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nickname = "JFoster"
                        },
                        new
                        {
                            Id = 2,
                            Nickname = "AShishkin"
                        },
                        new
                        {
                            Id = 3,
                            Nickname = "AShurikov"
                        });
                });

            modelBuilder.Entity("WebChat.Database.Model.UserCredential", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnName("user_id");

                    b.Property<string>("HashedPassword")
                        .HasColumnName("hashed_password");

                    b.Property<byte[]>("Salt")
                        .HasColumnName("salt");

                    b.HasKey("UserId")
                        .HasName("pk_user_credentials");

                    b.ToTable("user_credentials");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            HashedPassword = "EpbX3suZ7GVJ6gALNOLlMCZvZnajvSEcPSfA6eOguCE=",
                            Salt = new byte[] { 32, 46, 151, 129, 184, 45, 169, 11, 45, 209, 210, 50, 2, 185, 48, 33 }
                        },
                        new
                        {
                            UserId = 2,
                            HashedPassword = "7MgGZN2qI0t9xKEbpQ51DrCpfF+2gYOBLEH50VGX/o4=",
                            Salt = new byte[] { 227, 156, 82, 234, 222, 150, 232, 35, 18, 231, 10, 105, 154, 119, 152, 255 }
                        },
                        new
                        {
                            UserId = 3,
                            HashedPassword = "x5NOObMlygjfoYNWBaNPSYt7BoiomAaDWqLL9JIs7vM=",
                            Salt = new byte[] { 138, 159, 214, 35, 114, 199, 250, 30, 176, 40, 32, 244, 61, 8, 120, 60 }
                        });
                });

            modelBuilder.Entity("WebChat.Database.Model.Message", b =>
                {
                    b.HasOne("WebChat.Database.Model.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .HasConstraintName("fk_messages_rooms_room_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebChat.Database.Model.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .HasConstraintName("fk_messages_users_user_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebChat.Database.Model.Room", b =>
                {
                    b.HasOne("WebChat.Database.Model.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .HasConstraintName("fk_rooms_users_user_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebChat.Database.Model.RoomCredential", b =>
                {
                    b.HasOne("WebChat.Database.Model.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .HasConstraintName("fk_room_credentials_rooms_room_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebChat.Database.Model.User", b =>
                {
                    b.HasOne("WebChat.Database.Model.Room", "CurrentRoom")
                        .WithMany()
                        .HasForeignKey("CurrentRoomId")
                        .HasConstraintName("fk_users_rooms_current_room_id");
                });

            modelBuilder.Entity("WebChat.Database.Model.UserCredential", b =>
                {
                    b.HasOne("WebChat.Database.Model.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .HasConstraintName("fk_user_credentials_users_user_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}

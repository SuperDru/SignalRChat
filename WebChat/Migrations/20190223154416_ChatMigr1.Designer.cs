// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WebChat.Database;

namespace WebChat.Migrations
{
    [DbContext(typeof(ChatDbContext))]
    [Migration("20190223154416_ChatMigr1")]
    partial class ChatMigr1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("WebChat.Database.Model.Message", b =>
                {
                    b.Property<DateTime>("SendingTime")
                        .HasColumnName("sending_time");

                    b.Property<int>("UserId")
                        .HasColumnName("user_id");

                    b.Property<string>("MessageValue")
                        .HasColumnName("message_value");

                    b.Property<int?>("RoomId")
                        .HasColumnName("room_id");

                    b.HasKey("SendingTime", "UserId");

                    b.HasIndex("RoomId")
                        .HasName("ix_messages_room_id");

                    b.HasIndex("UserId")
                        .HasName("ix_messages_user_id");

                    b.ToTable("messages");
                });

            modelBuilder.Entity("WebChat.Database.Model.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("created_at");

                    b.Property<string>("Name")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_rooms");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("rooms");
                });

            modelBuilder.Entity("WebChat.Database.Model.RoomCredential", b =>
                {
                    b.Property<int>("RoomId")
                        .HasColumnName("room_id");

                    b.Property<string>("HashedPassword")
                        .HasColumnName("hashed_password");

                    b.Property<byte[]>("Salt")
                        .HasColumnName("salt");

                    b.HasKey("RoomId")
                        .HasName("pk_room_credentials");

                    b.ToTable("room_credentials");
                });

            modelBuilder.Entity("WebChat.Database.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<int?>("CurrentRoomId")
                        .HasColumnName("current_room_id");

                    b.Property<string>("Nickname")
                        .HasColumnName("nickname");

                    b.HasKey("Id")
                        .HasName("pk_users");

                    b.HasIndex("CurrentRoomId")
                        .HasName("ix_users_current_room_id");

                    b.HasIndex("Nickname")
                        .IsUnique();

                    b.ToTable("users");
                });

            modelBuilder.Entity("WebChat.Database.Model.UserCredential", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnName("user_id");

                    b.Property<string>("HashedPassword")
                        .HasColumnName("hashed_password");

                    b.Property<byte[]>("Salt")
                        .HasColumnName("salt");

                    b.HasKey("UserId")
                        .HasName("pk_user_credentials");

                    b.ToTable("user_credentials");
                });

            modelBuilder.Entity("WebChat.Database.Model.Message", b =>
                {
                    b.HasOne("WebChat.Database.Model.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .HasConstraintName("fk_messages_rooms_room_id");

                    b.HasOne("WebChat.Database.Model.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .HasConstraintName("fk_messages_users_user_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebChat.Database.Model.RoomCredential", b =>
                {
                    b.HasOne("WebChat.Database.Model.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .HasConstraintName("fk_room_credentials_rooms_room_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebChat.Database.Model.User", b =>
                {
                    b.HasOne("WebChat.Database.Model.Room", "CurrentRoom")
                        .WithMany()
                        .HasForeignKey("CurrentRoomId")
                        .HasConstraintName("fk_users_rooms_current_room_id");
                });

            modelBuilder.Entity("WebChat.Database.Model.UserCredential", b =>
                {
                    b.HasOne("WebChat.Database.Model.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .HasConstraintName("fk_user_credentials_users_user_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}

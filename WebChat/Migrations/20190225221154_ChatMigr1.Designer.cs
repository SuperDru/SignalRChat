// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WebChat.Database;

namespace WebChat.Migrations
{
    [DbContext(typeof(ChatDbContext))]
    [Migration("20190225221154_ChatMigr1")]
    partial class ChatMigr1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("WebChat.Database.Model.Message", b =>
                {
                    b.Property<DateTime>("SendingTime")
                        .HasColumnName("sending_time");

                    b.Property<int>("UserId")
                        .HasColumnName("user_id");

                    b.Property<string>("MessageValue")
                        .HasColumnName("message_value");

                    b.Property<int?>("RoomId")
                        .HasColumnName("room_id");

                    b.Property<int>("Type")
                        .HasColumnName("type");

                    b.HasKey("SendingTime", "UserId");

                    b.HasIndex("RoomId")
                        .HasName("ix_messages_room_id");

                    b.HasIndex("UserId")
                        .HasName("ix_messages_user_id");

                    b.ToTable("messages");
                });

            modelBuilder.Entity("WebChat.Database.Model.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("created_at");

                    b.Property<string>("Name")
                        .HasColumnName("name");

                    b.Property<int>("UserId")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_rooms");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("rooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2017, 1, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Developers",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2016, 5, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Managers",
                            UserId = 3
                        });
                });

            modelBuilder.Entity("WebChat.Database.Model.RoomCredential", b =>
                {
                    b.Property<int>("RoomId")
                        .HasColumnName("room_id");

                    b.Property<string>("HashedPassword")
                        .HasColumnName("hashed_password");

                    b.Property<byte[]>("Salt")
                        .HasColumnName("salt");

                    b.HasKey("RoomId")
                        .HasName("pk_room_credentials");

                    b.ToTable("room_credentials");

                    b.HasData(
                        new
                        {
                            RoomId = 1,
                            HashedPassword = "Yd1P1uBMBaie1UfzXOc7U5STpkCH1ZlTbVraHzz8wao=",
                            Salt = new byte[] { 168, 56, 167, 119, 234, 43, 127, 156, 135, 63, 41, 12, 252, 24, 114, 225 }
                        },
                        new
                        {
                            RoomId = 2,
                            HashedPassword = "FBzBQr4AuYLEZrZUheYXbMpxfoDwcLRm8w3s6rviwoY=",
                            Salt = new byte[] { 126, 102, 242, 88, 56, 152, 20, 127, 12, 26, 80, 219, 74, 166, 193, 135 }
                        });
                });

            modelBuilder.Entity("WebChat.Database.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<int?>("CurrentRoomId")
                        .HasColumnName("current_room_id");

                    b.Property<string>("Nickname")
                        .HasColumnName("nickname");

                    b.HasKey("Id")
                        .HasName("pk_users");

                    b.HasIndex("CurrentRoomId")
                        .HasName("ix_users_current_room_id");

                    b.HasIndex("Nickname")
                        .IsUnique();

                    b.ToTable("users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nickname = "JFoster"
                        },
                        new
                        {
                            Id = 2,
                            Nickname = "AShishkin"
                        },
                        new
                        {
                            Id = 3,
                            Nickname = "AShurikov"
                        });
                });

            modelBuilder.Entity("WebChat.Database.Model.UserCredential", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnName("user_id");

                    b.Property<string>("HashedPassword")
                        .HasColumnName("hashed_password");

                    b.Property<byte[]>("Salt")
                        .HasColumnName("salt");

                    b.HasKey("UserId")
                        .HasName("pk_user_credentials");

                    b.ToTable("user_credentials");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            HashedPassword = "koN6PsQVv1TPUdk9JUxp7vMtTfMaBskBWFHXdfbgkpw=",
                            Salt = new byte[] { 138, 37, 136, 66, 236, 1, 5, 239, 142, 195, 47, 41, 62, 140, 2, 138 }
                        },
                        new
                        {
                            UserId = 2,
                            HashedPassword = "BQAd2cvEAnZ+Q+mS1/9AAVeL3qGO7LX6K9Q6SMT+SyQ=",
                            Salt = new byte[] { 107, 44, 79, 242, 223, 79, 53, 175, 36, 239, 46, 88, 40, 69, 9, 9 }
                        },
                        new
                        {
                            UserId = 3,
                            HashedPassword = "m2CpuyG7OLyTgYkelSJ0MgiQEp+NthUTmFXXZrCKtO0=",
                            Salt = new byte[] { 165, 204, 114, 243, 14, 184, 94, 232, 188, 127, 7, 236, 211, 98, 123, 93 }
                        });
                });

            modelBuilder.Entity("WebChat.Database.Model.Message", b =>
                {
                    b.HasOne("WebChat.Database.Model.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .HasConstraintName("fk_messages_rooms_room_id");

                    b.HasOne("WebChat.Database.Model.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .HasConstraintName("fk_messages_users_user_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebChat.Database.Model.RoomCredential", b =>
                {
                    b.HasOne("WebChat.Database.Model.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .HasConstraintName("fk_room_credentials_rooms_room_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebChat.Database.Model.User", b =>
                {
                    b.HasOne("WebChat.Database.Model.Room", "CurrentRoom")
                        .WithMany()
                        .HasForeignKey("CurrentRoomId")
                        .HasConstraintName("fk_users_rooms_current_room_id");
                });

            modelBuilder.Entity("WebChat.Database.Model.UserCredential", b =>
                {
                    b.HasOne("WebChat.Database.Model.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .HasConstraintName("fk_user_credentials_users_user_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
